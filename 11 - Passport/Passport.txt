-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

PASSPORT 
Generador de estrategias de autenticacion y autorizacion, es un middleware, sirve para encapsular, las estrategias de Autenticacion y autorizacion.

            npm i passport


EN la documentacion de passport, tiene muchisimas estrategias segun lo que necesitemos ( en este caso passport-local)

    npm i passport-local



Para implementar son 3 grandes pasos.


        1- Generar una carpeta "config" / config,passport.js


            Dentro del archivo creado importamos passport y local.

            Luego cremos una funcion de callback que inicie passport y q cree una nueva estrategia por cada paso de nuestro sistema de Autenticacion.

                            import passport from 'passport'
                            import local from 'passport-local'


                            export const initPassport = () => {

                                passport.use('register', new local.Strategy(
                                    {
                                        passReqToCallback: true,
                                        usernameField: 'email'
                                    },
                                    async( req , username , password , done)=>{
                                        try {
                                            
                                            

                                        } catch (error) {
                                            done(error, false)
                                        }
                                    }
                                ))

                            }



Ahora para devolver informacion en vez de devolver con response, devolvemnos con el metodo done(error, user)


Ahora debemos crear un SERIALIZADOR Y DESERIALIZADOR
    
    passport.serializeUser((user, done)=>{
        return done(null, user._id)
    })


    passport.deserializeUser(async(id, done)=>{
        let user = await sessionsManager.getUserbyId(id)
        return done(null, user.user)
    })



    2- DEBEMOS CONFIGURAR PASSPORT EN EL SERVIDOR (app.js)

        //CONFIGURACION DE PASSPORT
        initPassport()
        app.use(passport.initialize())
        app.use(passport.session())


    3- Reacondicionar Router de sessiones.
            router.post('/register', passport.authenticate('register', {failureRedirect: '/register?error=Error en proceso de registro'}) ,async(req,res)=>{
            
            return res.redirect('/login?message=Usuario Registrado Con Exito')
        })




CLASE 21 EMPOEZAR
